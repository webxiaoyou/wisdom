# 项目相关配置
wisdom:
  # 名称
  name: wisdom_proprietor
  # 版本
  version: 1.0
  # 版权年份
  copyrightYear: 2023
  # 实例演示开关
  demoEnabled: true
  # 获取ip地址开关
  addressEnabled: true
  # 缓存懒加载
  cacheLazy: false

server:
  port: 7777
  servlet:
    context-path: /wisdom/proprietor  # Servlet 上下文路径，这个路径会在 URL 中作为前缀出现
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/wisdom?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: '123456'
  servlet:
    multipart:
      max-file-size: 10MB  # 允许上传的最大文件大小
      max-request-size: 20MB  # 允许的最大请求大小

  redis:
    host: localhost
    port: 6379  # Redis 服务器主机名和端口号
    # 数据库索引
    database: 0
    # 密码(如没有密码请注释掉)
    # password:
    # 连接超时时间
    timeout: 10s
    # 是否开启ssl
    ssl: false
    # redis key前缀
    keyPrefix: wisdom_proprietor

  mvc:
    format:
      date-time: yyyy-MM-dd HH:mm:ss  # 日期时间格式化配置

  jackson:
    # 日期格式化
    date-format: yyyy-MM-dd HH:mm:ss

    serialization:
      # 格式化输出
      indent_output: false
      # 忽略无法转换的对象
      fail_on_empty_beans: false

    deserialization:
      # 允许对象忽略 JSON 中不存在的属性
      fail_on_unknown_properties: false

redisson:
  # redis key前缀
  keyPrefix: wisdom_proprietor
  # 线程池数量
  threads: 4
  # Netty线程池数量
  nettyThreads: 8
  # 单节点配置
  singleServerConfig:
    # 客户端名称
    clientName: ${wisdom.name}
    # 最小空闲连接数
    connectionMinimumIdleSize: 8
    # 连接池大小
    connectionPoolSize: 32
    # 连接空闲超时，单位：毫秒
    idleConnectionTimeout: 10000
    # 命令等待超时，单位：毫秒
    timeout: 3000
    # 发布和订阅连接池大小
    subscriptionConnectionPoolSize: 50

mybatis-plus:
  # 不支持多包, 如有需要可在注解配置 或 提升扫包等级
  # 例如 com.**.**.mapper
  mapperPackage: com.wisdom.**.mapper
  # 对应的 XML 文件位置
  mapperLocations: classpath*:mapper/**/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.wisdom.**.domain
  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查
  checkConfigLocation: false
  configuration:
    # 自动驼峰命名规则（camel case）映射
    mapUnderscoreToCamelCase: true
    # MyBatis 自动映射策略
    # NONE：不启用 PARTIAL：只对非嵌套 resultMap 自动映射 FULL：对所有 resultMap 自动映射
    autoMappingBehavior: PARTIAL
    # MyBatis 自动映射时未知列或未知属性处理策
    # NONE：不做处理 WARNING：打印相关警告 FAILING：抛出异常和详细信息
    autoMappingUnknownColumnBehavior: NONE
    # 更详细的日志输出 会有性能损耗 org.apache.ibatis.logging.stdout.StdOutImpl
    # 关闭日志记录 (可单纯使用 p6spy 分析) org.apache.ibatis.logging.nologging.NoLoggingImpl
    # 默认日志输出 org.apache.ibatis.logging.slf4j.Slf4jImpl
    logImpl: org.apache.ibatis.logging.nologging.NoLoggingImpl

  global-config:
    db-config:
      logic-delete-field: delFlag  # 逻辑删除字段
      logic-delete-value: 1  # 逻辑删除字段的值
      logic-not-delete-value: 0  # 未删除的值
      id-type: auto  # ID 自动生成类型

# 用户配置
user:
  password:
    # 密码最大错误次数
    maxRetryCount: 5
    # 密码锁定时间（默认10分钟）
    lockTime: 10

# Sa-Token配置
sa-token:
  # token名称
  token-name: Authorization
  # token有效期 设为一天 (必定过期) 单位: 秒
  timeout: 7200
  # token临时有效期 (指定时间无操作就过期) 单位: 秒
  activity-timeout: 1800
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # 是否尝试从header里读取token
  is-read-header: true
  # 是否尝试从cookie里读取token
  is-read-cookie: false
  # token前缀
  token-prefix: "Proprietor"
  # jwt秘钥
  jwt-secret-key: wisdom_proprietor

# security配置
security:
  # 排除路径
  excludes:
    # 静态资源
    - /*.html
    - /**/*.html
    - /**/*.css
    - /**/*.js
    # 公共路径
    - /favicon.ico
    - /error
    # swagger 文档配置
    - /*/api-docs
    - /*/api-docs/**
    # 用户登录
    - /login
    - /manualLogin


springdoc:
  api-docs:
    # 是否开启接口文档
    enabled: true
  #    swagger-ui:
  #      # 持久化认证数据
  #      persistAuthorization: true
  info:
    # 标题
    title: '标题：${wisdom.name}后台管理系统_接口文档'
    # 描述
    description: '描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...'
    # 版本
    version: '版本号: 1.0'
    # 作者信息
    contact:
      name: wisdom
      email: crazylionli@163.com
      url: https://gitee.com/dromara/RuoYi-Vue-Plus
  components:
    # 鉴权方式配置
    security-schemes:
      apiKey:
        type: APIKEY
        in: HEADER
        name: ${sa-token.token-name}
  #这里定义了两个分组，可定义多个，也可以不定义
  group-configs:
    - group: 1.系统模块
      packages-to-scan: com.wisdom.proprletor
